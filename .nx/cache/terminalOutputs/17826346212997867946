
> react-router-devtools-monorepo@1.0.0 check:fix C:\Users\AlemTuzlak\projects\Remix-Dev-Tools
> biome check --fix .

.\packages\react-router-devtools\src\client\components\RouteNode.tsx:23:61 lint/suspicious/noExplicitAny ━━━━━━━━━━

  × Unexpected any. Specify a different type.
  
    21 │ 	const parentName = parent && parent?.name !== "/" ? parent.name : ""
    22 │ 	const name = nodeDatum.name.replace(parentName, "") ?? "/"
  > 23 │ 	const route = { ...nodeDatum, ...nodeDatum.attributes } as any as ExtendedRoute
       │ 	                                                           ^^^
    24 │ 	return (
    25 │ 		<g className="flex">
  
  i any disables many type checking rules. Its use should be avoided.
  

.\packages\react-router-devtools\src\client\components\jsonRenderer.tsx:35:26 lint/suspicious/noExplicitAny ━━━━━━━━━━

  × Unexpected any. Specify a different type.
  
    33 │ 									.then((res) => {
    34 │ 										if (!ref.current) return
  > 35 │ 										setJson((json: any) => ({
       │ 										               ^^^
    36 │ 											...json,
    37 │ 											[key]: res,
  
  i any disables many type checking rules. Its use should be avoided.
  

.\packages\react-router-devtools\src\client\components\RouteSegmentInfo.tsx:75:49 lint/suspicious/noExplicitAny ━━━━━━━━━━

  × Unexpected any. Specify a different type.
  
    73 │ 	const { server, setServerInfo } = useServerInfo()
    74 │ 	const { isConnected, sendJsonMessage } = useDevServerConnection()
  > 75 │ 	const loaderData = getLoaderData(route.data as any)
       │ 	                                               ^^^
    76 │ 	const serverInfo = server?.routes?.[route.id]
    77 │ 	const isRoot = route.id === "root"
  
  i any disables many type checking rules. Its use should be avoided.
  

.\packages\react-router-devtools\src\client\components\RouteSegmentInfo.tsx:191:44 lint/suspicious/noExplicitAny ━━━━━━━━━━

  × Unexpected any. Specify a different type.
  
    189 │ 					{Boolean(route.handle && Object.keys(route.handle).length > 0) && (
    190 │ 						<InfoCard title="Route handle">
  > 191 │ 							<JsonRenderer data={route.handle as any} />
        │ 							                                    ^^^
    192 │ 						</InfoCard>
    193 │ 					)}
  
  i any disables many type checking rules. Its use should be avoided.
  

.\packages\react-router-devtools\src\client\context\requests\request-context.tsx:11:47 lint/suspicious/noExplicitAny ━━━━━━━━━━

  × Unexpected any. Specify a different type.
  
     9 │ const requestMap = new Map<string, RequestEvent>()
    10 │ 
  > 11 │ export const RequestProvider = ({ children }: any) => {
       │                                               ^^^
    12 │ 	const [requests, setRequests] = useState<RequestEvent[]>([])
    13 │ 	const setNewRequests = useCallback((payload: string) => {
  
  i any disables many type checking rules. Its use should be avoided.
  

.\packages\react-router-devtools\src\client\hooks\detached\useSyncStateWhenDetached.ts:11:45 lint/suspicious/noExplicitAny ━━━━━━━━━━

  × Unexpected any. Specify a different type.
  
     9 │ 	const { dispatch, state } = useRDTContext()
    10 │ 
  > 11 │ 	useAttachListener("storage", "window", (e: any) => {
       │ 	                                           ^^^
    12 │ 		// Not in detached mode
    13 │ 		if (!state.detachedWindow && !state.detachedWindowOwner) {
  
  i any disables many type checking rules. Its use should be avoided.
  

.\packages\react-router-devtools\src\client\hooks\useDebounce.ts:3:35 lint/suspicious/noExplicitAny ━━━━━━━━━━

  × Unexpected any. Specify a different type.
  
    1 │ import React from "react"
    2 │ 
  > 3 │ function debounce(func: (...args: any[]) => any, timeout = 300) {
      │                                   ^^^
    4 │ 	let timer: NodeJS.Timeout
    5 │ 	return (...args: any[]) => {
  
  i any disables many type checking rules. Its use should be avoided.
  

.\packages\react-router-devtools\src\client\hooks\useDebounce.ts:3:45 lint/suspicious/noExplicitAny ━━━━━━━━━━

  × Unexpected any. Specify a different type.
  
    1 │ import React from "react"
    2 │ 
  > 3 │ function debounce(func: (...args: any[]) => any, timeout = 300) {
      │                                             ^^^
    4 │ 	let timer: NodeJS.Timeout
    5 │ 	return (...args: any[]) => {
  
  i any disables many type checking rules. Its use should be avoided.
  

.\packages\react-router-devtools\src\client\hooks\useDebounce.ts:5:19 lint/suspicious/noExplicitAny ━━━━━━━━━━

  × Unexpected any. Specify a different type.
  
    3 │ function debounce(func: (...args: any[]) => any, timeout = 300) {
    4 │ 	let timer: NodeJS.Timeout
  > 5 │ 	return (...args: any[]) => {
      │ 	                 ^^^
    6 │ 		clearTimeout(timer)
    7 │ 		timer = setTimeout(() => {
  
  i any disables many type checking rules. Its use should be avoided.
  

.\packages\react-router-devtools\src\client\hooks\useDebounce.ts:14:49 lint/suspicious/noExplicitAny ━━━━━━━━━━

  × Unexpected any. Specify a different type.
  
    12 │ }
    13 │ 
  > 14 │ export function useDebounce(callback: (...args: any[]) => void, delay = 300) {
       │                                                 ^^^
    15 │ 	const callbackRef = React.useRef(callback)
    16 │ 	React.useEffect(() => {
  
  i any disables many type checking rules. Its use should be avoided.
  

.\packages\react-router-devtools\src\client\components\Select.tsx:14:109 lint/suspicious/noExplicitAny ━━━━━━━━━━

  × Unexpected any. Specify a different type.
  
    12 │ const SelectValue = SelectPrimitive.Value
    13 │ 
  > 14 │ const SelectTrigger = ({ className, children, ref, ...props }: SelectPrimitive.SelectTriggerProps & { ref?: any }) => (
       │                                                                                                             ^^^
    15 │ 	<SelectPrimitive.Trigger
    16 │ 		ref={ref}
  
  i any disables many type checking rules. Its use should be avoided.
  

.\packages\react-router-devtools\src\client\components\Select.tsx:36:49 lint/suspicious/noExplicitAny ━━━━━━━━━━

  × Unexpected any. Specify a different type.
  
    34 │ 	ref,
    35 │ 	...props
  > 36 │ }: SelectPrimitive.SelectContentProps & { ref?: any }) => {
       │                                                 ^^^
    37 │ 	return (
    38 │ 		// @ts-ignore
  
  i any disables many type checking rules. Its use should be avoided.
  

.\packages\react-router-devtools\src\client\components\Select.tsx:65:95 lint/suspicious/noExplicitAny ━━━━━━━━━━

  × Unexpected any. Specify a different type.
  
    63 │ }
    64 │ 
  > 65 │ const SelectLabel = ({ className, ref, ...props }: SelectPrimitive.SelectLabelProps & { ref?: any }) => (
       │                                                                                               ^^^
    66 │ 	<SelectPrimitive.Label ref={ref} className={cn("py-1.5 pl-8 pr-2 font-sans text-sm", className)} {...props} />
    67 │ )
  
  i any disables many type checking rules. Its use should be avoided.
  

.\packages\react-router-devtools\src\client\components\Select.tsx:69:103 lint/suspicious/noExplicitAny ━━━━━━━━━━

  × Unexpected any. Specify a different type.
  
    67 │ )
    68 │ 
  > 69 │ const SelectItem = ({ className, children, ref, ...props }: SelectPrimitive.SelectItemProps & { ref?: any }) => (
       │                                                                                                       ^^^
    70 │ 	<SelectPrimitive.Item
    71 │ 		ref={ref}
  
  i any disables many type checking rules. Its use should be avoided.
  

.\packages\react-router-devtools\src\client\components\Select.tsx:88:104 lint/suspicious/noExplicitAny ━━━━━━━━━━

  × Unexpected any. Specify a different type.
  
    86 │ )
    87 │ 
  > 88 │ const _SelectSeparator = ({ className, ref, ...props }: SelectPrimitive.SelectSeparatorProps & { ref?: any }) => (
       │                                                                                                        ^^^
    89 │ 	<SelectPrimitive.Separator ref={ref} className={cn("bg-grey-600 -mx-1 my-1 h-px", className)} {...props} />
    90 │ )
  
  i any disables many type checking rules. Its use should be avoided.
  

.\packages\react-router-devtools\src\client\hof.test.ts:11:75 lint/suspicious/noExplicitAny ━━━━━━━━━━

  × Unexpected any. Specify a different type.
  
     9 │ 		}
    10 │ 		const wrapped = withClientLoaderWrapper(clientLoader, "test")
  > 11 │ 		expect(wrapped({ request, params: {}, serverLoader: (async () => {}) as any }) instanceof Promise).toBe(true)
       │ 		                                                                        ^^^
    12 │ 	})
    13 │ 
  
  i any disables many type checking rules. Its use should be avoided.
  

.\packages\react-router-devtools\src\client\hof.test.ts:20:89 lint/suspicious/noExplicitAny ━━━━━━━━━━

  × Unexpected any. Specify a different type.
  
    18 │ 		}
    19 │ 		const wrapped = withClientLoaderWrapper(clientLoader, "test")
  > 20 │ 		const result = await wrapped({ request, params: {}, serverLoader: (async () => {}) as any })
       │ 		                                                                                      ^^^
    21 │ 		expect(result).toBe("test")
    22 │ 	})
  
  i any disables many type checking rules. Its use should be avoided.
  

.\packages\react-router-devtools\src\client\hof.test.ts:38:74 lint/suspicious/noExplicitAny ━━━━━━━━━━

  × Unexpected any. Specify a different type.
  
    36 │ 		const wrapped = withClientLoaderWrapper(clientLoader, "test")
    37 │ 		const wrappedStart = performance.now()
  > 38 │ 		await wrapped({ request, params: {}, serverLoader: (async () => {}) as any })
       │ 		                                                                       ^^^
    39 │ 		const wrappedEnd = performance.now()
    40 │ 		const wrappedTime = wrappedEnd - wrappedStart
  
  i any disables many type checking rules. Its use should be avoided.
  

.\packages\react-router-devtools\src\client\hof.test.ts:54:88 lint/suspicious/noExplicitAny ━━━━━━━━━━

  × Unexpected any. Specify a different type.
  
    52 │ 		}
    53 │ 		const wrapped = withClientLoaderWrapper(clientLoader, "test")
  > 54 │ 		await wrapped({ request, params: { test: "test" }, serverLoader: (async () => {}) as any })
       │ 		                                                                                     ^^^
    55 │ 	})
    56 │ 
  
  i any disables many type checking rules. Its use should be avoided.
  

.\packages\react-router-devtools\src\client\hof.test.ts:71:10 lint/suspicious/noExplicitAny ━━━━━━━━━━

  × Unexpected any. Specify a different type.
  
    69 │ 			serverLoader: (async () => {
    70 │ 				return "test2"
  > 71 │ 			}) as any,
       │ 			      ^^^
    72 │ 		})
    73 │ 	})
  
  i any disables many type checking rules. Its use should be avoided.
  

The number of diagnostics exceeds the number allowed by Biome.
Diagnostics not shown: 124.
Checked 200 files in 163ms. Fixed 4 files.
Found 144 errors.
check ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

  × Some errors were emitted while applying fixes.
  

[41m[30m ELIFECYCLE [39m[49m [31mCommand failed with exit code 1.[39m
